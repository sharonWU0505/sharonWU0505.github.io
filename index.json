[{"body":"","link":"/docs/","title":"Posts"},{"body":"Hi, I'm Sharon.\n","link":"/about/","title":"About Me"},{"body":"Hugo 是一個用 Go 寫成的靜態網站生成器（Static Site Generator）。號稱\n The world’s fastest framework for building websites.\n 不管是「網站打包」還是「從零建立網站」的速度都很快。其架構允許使用者以 Markdown 格式撰寫內容，再搭配 layout template 渲染出畫面，對於喜歡用 Markdown 簡潔撰寫文章的人來說很合適！\n與類似的框架 Wordpress 和 Gatsby 一樣，Hugo 也有豐富多元且開源的主題 (theme)，讓人方便快速地就建立起自己的網站。\n此網站就是以 Hugo 建立的，並使用 Compose Theme 讓我們來看看是怎麼做的吧～\nGetting Started  Reference: Hugo - Quick Start, Compose - Install Theme\n  Step 1 - Install Hugo (for MacOS)  brew install hugo  Step 2 - New a Site  hugo new site my-blog  Step 3 - Install a theme  cd my-blog git init git submodule add https://github.com/onweru/compose/ themes/compose cp -a themes/compose/exampleSite/* .  Step 4 - Run Hugo Server  hugo server   Step 5 - Open http://localhost:1313/ in browser and then you'll see a site with the Compose theme\n  Step 6 - Add your content and customize the styles!\n  Directory Structure Hugo 有制式的檔案架構，若依照該架構放置內容，便能享有 Hugo 預設的功能，諸如：列表和單篇結構、多國語言、template 組合等等。以下介紹常見 Hugo 架構中各檔案夾的意義\nmy-blog ├── archetypes ├── assets // scss and js to be processed by Hugo Pipes ├── content // 網站主要內容都維護在此 ├── layouts // 網站頁面樣式，因為我們有使用主題，如果需要客製化覆蓋主題的樣式，可在此新增檔案 ├── static // 放置網站圖片、CSS、JS 檔案 ├── theme // 主題 └── config.toml // 設定檔 Host the Site TBD\n","link":"/docs/2021/build-a-blog-with-hugo/","title":"如何以 Hugo 建立部落格？"},{"body":"以下內容大多翻譯自 React 文件：Typechecking With PropTypes\n在寫 React component 時經常遇到需要確認 props 是否符合型別和資料結構的情況，確保 component 能如預期運作。除了用 Flow 或 TypeScript 去檢查型別之外，React 本身也提供 propTypes 屬性用以確認 component 拿到的 props。在 function 和 class component 上都可以使用。\n除了上述好處外，個人認為定義 propTypes 也能讓 component 的 interface 更為清楚，使其他開發者一眼就知道該傳入的 props，有類似文件的作用。\n 須注意為了避免效能問題，propTypes 檢查只發生在開發模式。 如果發生錯誤，會在 console 中看到警告\n Install props-types 自 React v15.5 後，React.PropTypes 被移出到獨立的 library，因此若要使用須額外安裝。\nnpm install prop-types --save Supported PropTypes  Basic data types  PropTypes.any PropTypes.bool  PropTypes.number PropTypes.string  PropTypes.func PropTypes.array PropTypes.object PropTypes.symbol   Renderable types  PropTypes.node : the prop should be anything that can be rendered by React  PropTypes.element: the prop should be a React element   也有其他更精確的 operator 可以用，亦能傳入 expression  instanceOf oneOf oneOfType arrayOf shape   有能定義是否為 required  isRequired    Example (同理 function component) import PropTypes from \u0026quot;prop-types\u0026quot;; class ReactComponent extends React.Component { // ...component class body here } ReactComponent.propTypes = { // ...props-type definitions here } Default Prop Values 也可以給予 props defaultProps。型別檢查會在 defaultProps 賦予 props 值之後，所以型別檢查也會作用在 defaultProps 上。\nclass ReactComponent extends React.Component { render() { return ( \u0026lt;div\u0026gt;Hello, {this.props.name}\u0026lt;/div\u0026gt; ) } } ReactComponent.defaultProps = { name: \u0026quot;stranger\u0026quot;, } Reference  PropTypes in React: A complete guide ","link":"/docs/2020/react-props-types/","title":"Validating React Component Props with props-types"},{"body":"","link":"/","title":"Sharon's Blog"}]